{"name":"Backbone.LinkedCollection","tagline":"Backbone.js plugin to make Backbone.Collection smarter. Consumes Link field (RFC 5988) in the HTTP Response header to enable Web Linking between partial list resources.","body":"# Backbone.LinkedCollection\r\n\r\nBackbone.js plugin to make Backbone.Collection smarter. Consumes Link field\r\n([RFC 5988](http://tools.ietf.org/html/rfc5988#page-6)) in the HTTP Response\r\nheader to enable Web Linking between sections of list resources.\r\n\r\n## What do you mean?\r\n\r\nWeb Linking is a technique used to describe relationships between two or more\r\nresources on the web. If you have used:\r\n\r\n\t<link href=\"http://cdn.domain.com/css/bootstrap.css\" rel=\"stylesheet\">\r\n\r\nthen you are familiar with web linking. What it is describing is that the\r\nHTML page you're viewing has a related resource of type `stylesheet` at the\r\nprovided `href`.\r\n\r\n## And what's does this have to do with Backbone.Collection?\r\n\r\nNothing. But we can experiment with it to come up with a set of conventions\r\nthat make our Backbone.js collections a little smarter.\r\n\r\n## How?\r\n\r\nImagine the following links:\r\n\r\n\t<link href=\"http://api.com/contacts\" rel=\"first\">\r\n\t<link href=\"http://api.com/contacts?page=2\" rel=\"prev\">\r\n\t<link href=\"http://api.com/contacts?page=3\" rel=\"next\">\r\n\t<link href=\"http://api.com/contacts?page=23445\" rel=\"last\">\r\n\r\nWhat RFC 5988 allows is to use the same semantics in the HTTP\r\nresponse header. So, provided that you call a list resource within some API, it\r\ncan provide you with how to obtain other portions of the same list resource.\r\n\r\nTake a look at this request to [Github Gists API](http://developer.github.com/v3/gists/):\r\n\r\n\t$ curl -I https://api.github.com/gists/public\r\n\tHTTP/1.1 200 OK\r\n\tLink: <https://api.github.com/gists/public?page=2>; rel=\"next\", <https://api.github.com/gists/public?page=23914>; rel=\"last\"\r\n\r\nSee that? It means from 1 initial request, we now know what related resources\r\nthere are for this particular list resource. Therefore by taking advantage of\r\nthis information, we can formulate a smarter Backbone.Collection which I have\r\nnamed Backbone.LinkedCollection.\r\n\r\n## So what's new?\r\n\r\nIn Backbone.LinkedCollection, there are 4 new methods:\r\n\r\n```javascript\r\nvar gists = new Backbone.LinkedCollection({\r\n\turl: 'https://api.github.com/gists/public',\r\n\tmodel: Demo.Models.Gist\r\n});\r\n\r\n// Get public gists\r\ngists.fetch();\r\n\r\n// All of the methods below have the same paramter signature as `fetch`\r\n\r\n// Go to the first page\r\ngists.first();\r\n\r\n// Get the previous set\r\ngists.prev();\r\n\r\n// Get the next set\r\ngists.next();\r\n\r\n// Go to the last page\r\ngists.last();\r\n```\r\n\r\nA simple demo is here: http://jsfiddle.net/davidhong/gAyAx/ (CoffeeScript: http://jsfiddle.net/davidhong/m2jS2/)\r\n\r\n## Issues & Resolutions\r\n\r\n### It is not a paging replacement\r\n\r\nWhilst HTTP Link field can contain more links than the 4 mentioned above,\r\nit is not practical to include all pages. Thus, this should not be a replacement\r\nfor paged lists. Instead this could be useful for sequential lists such as\r\nTwitter streams.\r\n\r\n### PEG.js based HTTP Link field parser\r\n\r\nIs too big. A simple `page` and `per_page` implementation would be more ideal\r\nif you're looking for something small. One main advantage of HTTP Link field is\r\nthat resource end-point is absolute as it is given to us by the server.\r\n\r\n### No support for bootstrapping of models\r\n\r\nSince this is based HTTP Link field, at least one response is required to find\r\nout about linked resources. Ideally, a collection should have an option to be\r\nbootstrapped instead of fetching on start-up.\r\n\r\n### Many more\r\n\r\nAs mentioned earlier, this is an experiement.\r\n\r\n## Further notes\r\n\r\nI think this idea could be useful on Backbone.Model as well. HTTP Link field is\r\nnot limited to list resources, but can extend to cater for different resources.\r\n\r\n## TODO\r\n\r\n1. <del>Migrate the sources from jsbin/jsfiddle/gist/wherever</del>\r\n2. Write some tests\r\n3. <del>Fix code</del>\r\n4. <del>Tasks</del>\r\n\r\n## Tags\r\n\r\nBackbone.js, LinkedCollection, Linked, Collection, TFC5988","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}